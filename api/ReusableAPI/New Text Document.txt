API Reusability & Adjustments Guide

This document explains which API files from the Vatikan Archives project can be reused in other projects and what adjustments are needed.

✅ Fully Reusable (Minimal Changes Needed)

These can be dropped into new projects with only small tweaks (like renaming routes):

_auth.js → Generic auth helper.

_db.js / _pg.js → Database connection utilities (adjust DB URL).

admin-login.js → Works anywhere with admin login.

products.js → Can be renamed to items, events, courses, etc.

cart.js → Generic cart management.

orders.js → Universal order storage.

contact.js → Basic contact form handler.

public-settings.js → Store site-wide config.

debug-echo.js → Safe debug tool.

instagram-config.js & instagram-posts.js → Reusable for any IG feed.

⚠️ Reusable but Needs Adjustments

These work across projects, but will need edits depending on business logic, database schema, or environment variables.

Payments / Checkout

create-checkout-session.js → Update success/cancel redirect URLs.

create-payment-intent.js → Adjust currency, amounts, metadata.

confirm-payment.js → Make sure it logs orders in your DB schema.

checkout-success.js → Change thank-you page / confirmation logic.

checkout-cancel.js → Change redirect after cancellation.

get-checkout-session.js → Ensure it matches how you store sessions.

get-stripe-config.js → Update Stripe publishable key.

stripe-utils.js → Usually fine, but check helper methods.

stripe-webhook.js → Adjust events handled (e.g., donation, subscription).

payment-config.js → Replace with your own env variables.

Admin

admin-settings.js → Depends on how settings are stored in DB.

admin-stripe.js → Adjust for how Stripe keys are stored.

🧪 Dev/Test Only

test-stripe.js → Keep for development to confirm Stripe setup, but disable/remove in production.

❌ Project-Specific (Not Recommended to Copy Directly)

checkout.js.disabled → Deprecated.

stripe-health.js.disabled → Disabled, not needed.

admin_settings_seed_int.sql → Seed file for this specific site.

migrations/0001_add_products_columns.sql → Schema migration tied to this DB.

README.txt → Repo-specific notes.

🔑 Summary

Safe everywhere: Auth, DB, cart, orders, contact, products, Instagram.

Needs editing: Payments, checkout flow, admin settings.

Dev only: test-stripe.js.

Skip: Old/disabled files, project-specific SQL seeds.

This way, you can reuse 80% of the API as a boilerplate, with only checkout, payments, and settings needing project-specific adjustments.